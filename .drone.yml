# ---
# kind: pipeline
# name: documentation
# steps:
#   - name: build-docs
#     image: node:alpine
#     commands:
#       - apk add --no-cache git
#       - git config --global user.email "no-reply@platy.plus"
#       - git config --global user.name "Drone.io CI"
#       - ./scripts/deploy-documentation.sh
#     environment:
#       GH_TOKEN:
#         from_secret: GH_TOKEN
#       GH_USER:
#         from_secret: GH_USER
#     when:
#       branch: master

kind: pipeline
type: docker
name: publish
trigger:
  branch:
    - master
steps:
  - name: build-packages
    image: node:alpine
    commands:
      - apk add --no-cache git
      - git config --global user.email "no-reply@platy.plus"
      - git config --global user.name "Drone.io CI"
      - yarn install
      - yarn run build
  - name: publish-platyplus-service
    depends_on: [build-packages]
    image: plugins/gcr
    settings:
      dockerfile: backend/platyplus-service/Dockerfile
      repo: platyplus-0402/platyplus-service
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - next
      json_key:
        from_secret: google_credentials
  - name: publish-graphql-engine
    depends_on: [build-packages]
    image: plugins/gcr
    settings:
      dockerfile: backend/graphql-engine/Dockerfile
      repo: platyplus-0402/graphql-engine
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - next
      json_key:
        from_secret: google_credentials
  - name: publish-authentication-service
    depends_on: [build-packages]
    image: plugins/gcr
    settings:
      dockerfile: backend/authentication-service/Dockerfile
      repo: platyplus-0402/authentication-service
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - next
      json_key:
        from_secret: google_credentials
  - name: publish-functions-service
    depends_on: [build-packages]
    image: plugins/gcr
    settings:
      dockerfile: backend/functions-service/Dockerfile
      repo: platyplus-0402/functions-service
      tags:
        - ${DRONE_COMMIT_SHA:0:8}
        - next
      json_key:
        from_secret: google_credentials

---
kind: pipeline
type: docker
name: deploy
trigger:
  branch:
    - master
depends_on: [publish]
steps:
  - name: deploy-authentication-service
    image: google/cloud-sdk:latest # TODO create a custom docker gcloud/'deployer'?
    commands:
      - echo "$CREDENTIALS" | base64 -d > .credentials && gcloud auth activate-service-account --key-file .credentials && rm .credentials && gcloud config set project platyplus-0402
      # TODO env and connect to other services
      # TODO --connectivity=internal not working on managed services, only on GKE
      - >
        gcloud beta run deploy authentication --image gcr.io/platyplus-0402/authentication-service --platform managed
    environment:
      CREDENTIALS:
        from_secret: google_credentials
  - name: deploy-functions-service
    image: google/cloud-sdk:latest # TODO create a custom docker gcloud/'deployer'?
    commands:
      - echo "$CREDENTIALS" | base64 -d > .credentials && gcloud auth activate-service-account --key-file .credentials && rm .credentials && gcloud config set project platyplus-0402
      # TODO env and connect to other services
      # TODO --connectivity=internal not working on managed services, only on GKE
      - >
        gcloud beta run deploy functions --image gcr.io/platyplus-0402/functions-service --platform managed
    environment:
      CREDENTIALS:
        from_secret: google_credentials
  - name: deploy-graphql-engine
    depends_on:
      - deploy-authentication-service
      - deploy-functions-service
    image: google/cloud-sdk:latest # TODO create a custom docker gcloud/'deployer'?
    commands:
      - echo "$CREDENTIALS" | base64 -d > .credentials && gcloud auth activate-service-account --key-file .credentials && rm .credentials && gcloud config set project platyplus-0402
      # TODO env and connect to other services
      - >
        gcloud beta run deploy graphql-engine --image gcr.io/platyplus-0402/graphql-engine --platform managed
    environment:
      CREDENTIALS:
        from_secret: google_credentials
  - name: deploy-platyplus-service
    depends_on:
      - deploy-graphql-engine
    image: google/cloud-sdk:latest # TODO create a custom docker gcloud/'deployer'?
    commands:
      - echo "$CREDENTIALS" | base64 -d > .credentials && gcloud auth activate-service-account --key-file .credentials && rm .credentials && gcloud config set project platyplus-0402
      # TODO env
      - >
        gcloud beta run deploy platyplus --image gcr.io/platyplus-0402/platyplus-service --platform managed
    environment:
      CREDENTIALS:
        from_secret: google_credentials
