version: '3.1'
services:
  app:
    image: platyplus/platyplus
    depends_on:
      - graphql-engine
    environment:
      API: 'graphql.${DOMAIN}'
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - traefik.port=3000
  administration:
    image: platyplus/administration
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
      HASURA_GRAPHQL_ACCESS_KEY_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
      PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
    deploy:
      replicas: 1
    secrets:
      - authentication_public_key
      - hasura_secret_key
  authentication:
    image: platyplus/authentication
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
      HASURA_GRAPHQL_ACCESS_KEY_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
      PRIVATE_KEY_FILE: /run/secrets/authentication_private_key
      PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
    deploy:
      replicas: 1
    secrets:
      - authentication_private_key
      - authentication_public_key
      - hasura_secret_key
  configuration:
    image: couchdb
    environment:
      NODENAME: node-name
      ERL_FLAGS: '-setcookie "brumbrum"'
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: admin
      COUCHDB_SECRET: admin
    labels:
      - 'traefik.frontend.rule=Host:config-db.${DOMAIN}'
      - traefik.port=5984
  graphql-engine:
    image: platyplus/graphql-engine
    depends_on:
      - authentication
      - postgres
      - synchronization-hook
    environment:
      HASURA_GRAPHQL_DATABASE_URL: 'postgres://postgres:@postgres:5432/postgres'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      AUTH_PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
      HASURA_GRAPHQL_ACCESS_KEY_FILE: /run/secrets/hasura_secret_key
    labels:
      - 'traefik.frontend.rule=Host:graphql.${DOMAIN}'
      - traefik.port=3000
    deploy:
      replicas: 1
    secrets:
      - authentication_public_key
      - hasura_secret_key
  postgres:
    image: 'mdillon/postgis:11-alpine'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 30s
      timeout: 5s
    volumes:
      - 'db_data:/var/lib/postgresql/data'
  reverse-proxy:
    image: traefik
    command:
      - '--entrypoints=Name:http Address::80 Redirect.EntryPoint:https'
      - '--entrypoints=Name:https Address::443 TLS'
      - '--defaultentrypoints=http,https'
      - '--acme'
      - '--acme.storage=/etc/traefik/acme/acme.json'
      - '--acme.entryPoint=https'
      - '--acme.httpChallenge.entryPoint=http'
      - '--acme.onHostRule=true'
      - '--acme.onDemand=false'
      - '--acme.email=admin@platy.plus'
      - '--acme.domains=${DOMAIN}'
    healthcheck:
      test:
        - CMD
        - /traefik
        - healthcheck
        - '--ping'
      interval: 30s
      timeout: 5s
    ports:
      - '443:443'
    volumes:
      - 'acme:/etc/traefik/acme'
  synchronization-hook:
    image: platyplus/synchronization-hook
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
      HASURA_GRAPHQL_ACCESS_KEY_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
    deploy:
      replicas: 1
    secrets:
      - hasura_secret_key
volumes:
  db_data: null
  acme: null
secrets:
  authentication_private_key:
    external: true
  authentication_public_key:
    external: true
  hasura_secret_key:
    external: true
