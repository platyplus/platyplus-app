version: '3.4'
services:
  authentication:
    deploy:
      replicas: 1
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
      PRIVATE_KEY_FILE: /run/secrets/authentication_private_key
      PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
    secrets:
      - authentication_private_key
      - authentication_public_key
      - hasura_secret_key
  administration:
    deploy:
      replicas: 1
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
      PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
    secrets:
      - authentication_public_key
      - hasura_secret_key
  graphql-engine:
    deploy:
      replicas: 1
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET_FILE: /run/secrets/hasura_secret_key
    secrets:
      - authentication_public_key
      - hasura_secret_key
  postgres:
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 5s
  reverse-proxy:
    command:
      - '--docker.watch'
    healthcheck:
      test: ['CMD', '/traefik', 'healthcheck', '--ping']
      interval: 30s
      timeout: 5s
  synchronization-hook:
    deploy:
      replicas: 1
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET_FILE: /run/secrets/hasura_secret_key
      NODE_ENV: production
    secrets:
      - hasura_secret_key
secrets:
  authentication_private_key:
    external: true
  authentication_public_key:
    external: true
  hasura_secret_key:
    external: true
