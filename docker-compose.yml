version: '3.4'
services:
  app:
    image: platyplus/platyplus
    depends_on:
      - 'graphql-engine'
    environment:
      API: 'graphql.${DOMAIN}/v1alpha1/graphql'
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - 'traefik.port=3000'
  administration:
    image: platyplus/administration
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
  authentication:
    image: platyplus/authentication
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
  # configuration: # TODO: volume to store the data and config, and secure/encrypt
  #   image: couchdb # TODO: tag
  #   environment: # TODO: script to init the cluster - part of the application? Init the DB and replication in the application
  #     NODENAME: 'node-name' # TODO: check documentation
  #     ERL_FLAGS: -setcookie "brumbrum" # TODO: check documentation
  #     COUCHDB_USER: admin
  #     COUCHDB_PASSWORD: admin
  #     COUCHDB_SECRET: admin # TODO: secret
  #   labels:
  #     - 'traefik.frontend.rule=Host:config-db.${DOMAIN}'
  #     - 'traefik.port=5984'
  # volumes:
  # - /var/run/docker.sock:/var/run/docker.sock
  functions:
    image: platyplus/functions
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
  # graphql-gateway:
  #   image: platyplus/graphql-gateway
  #   depends_on:
  #     - 'authentication'
  #     - 'graphql-engine'
  #     - 'functions'
  #   environment:
  #     HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
  #     AUTH_URL: 'http://authentication:3000/graphql'
  #     FUNCTIONS_URL: 'http://functions:3000/graphql'
  #   labels:
  #     - 'traefik.frontend.rule=Host:api.${DOMAIN}'
  #     - 'traefik.port=3000'
  graphql-engine:
    image: platyplus/graphql-engine
    depends_on:
      - 'authentication'
      - 'postgres'
      - 'synchronization-hook'
    labels:
      - 'traefik.frontend.rule=Host:graphql.${DOMAIN}'
      - 'traefik.port=3000'
  postgres:
    image: mdillon/postgis:11-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
  reverse-proxy:
    image: traefik # The official Traefik docker image
    command:
      - '--api'
      - '--docker'
      - '--web'
    ports:
      - '80:80' # The HTTP port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  synchronization-hook:
    image: platyplus/synchronization-hook
    environment:
      HASURA_URL: 'http://graphql-engine:3000/v1alpha1/graphql'
volumes:
  db_data:
