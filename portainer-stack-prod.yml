version: '3.1'
services:
  reverse-proxy:
    image: traefik
    restart: always
    command:
      - '--docker.watch'
      - '--entrypoints=Name:http Address::80 Redirect.EntryPoint:https'
      - '--entrypoints=Name:https Address::443 TLS'
      - '--defaultentrypoints=http,https'
      - '--acme'
      - '--acme.storage=/etc/traefik/acme/acme.json'
      - '--acme.entryPoint=https'
      - '--acme.httpChallenge.entryPoint=http'
      - '--acme.onHostRule=true'
      - '--acme.onDemand=false'
      - '--acme.email=admin@platy.plus'
      - '--acme.domains=${DOMAIN}'
    ports:
      - '443:443'
    volumes:
      - 'acme:/etc/traefik/acme'
  postgres:
    image: 'mdillon/postgis:11-alpine'
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - 'db_data:/var/lib/postgresql/data'
  authentication:
    image: platyplus/authentication
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ALGORITHM: RS256
      HASURA_URL: 'http://graphql-engine:8080/v1alpha1/graphql'
      NODE_ENV: production
      HASURA_GRAPHQL_ACCESS_KEY_FILE: /run/secrets/hasura_secret_key
      PUBLIC_KEY_FILE: /run/secrets/authentication_public_key
      PRIVATE_KEY_FILE: /run/secrets/authentication_private_key
    secrets:
      - hasura_secret_key
      - authentication_public_key
      - authentication_private_key
    deploy:
      replicas: 2
  graphql-engine:
    image: 'hasura/graphql-engine:v1.0.0-alpha37'
    restart: always
    labels:
      - 'traefik.frontend.rule=Host:graphql.${DOMAIN}'
      - traefik.port=8080
    depends_on:
      - postgres: null
        condition: service_healthy
        authentication: null
    environment:
      HASURA_GRAPHQL_DATABASE_URL: 'postgres://postgres:@postgres:5432/postgres'
      HASURA_GRAPHQL_ENABLE_CONSOLE: '${HASURA_ENABLE_CONSOLE}'
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256", "key":"${PUBLIC_KEY}"}'
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
  app:
    image: platyplus/platyplus
    restart: always
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - traefik.port=80
    depends_on:
      - authentication
      - graphql-engine
    environment:
      API: 'graphql.${DOMAIN}/v1alpha1/graphql'
volumes:
  db_data: null
  acme: null
secrets:
  hasura_secret_key:
    external: true
  authentication_public_key:
    external: true
  authentication_private_key:
    external: true
