- args:
    cascade: false
    sql: "CREATE OR REPLACE VIEW \"public\".\"table\" AS \n SELECT tables.table_name,\n
      \   tables.table_schema,\n    COALESCE(columns.columns, '[]'::json) AS columns,\n
      \   COALESCE(pk.columns, '[]'::json) AS primary_key_columns,\n    COALESCE(constraints.constraints,
      '[]'::json) AS constraints,\n    COALESCE(views.view_info, 'null'::json) AS
      view_info\n   FROM (((((information_schema.tables tables\n     LEFT JOIN ( SELECT
      c.table_name,\n            c.table_schema,\n            json_agg(json_build_object('name',
      c.column_name, 'type', c.udt_name, 'domain', c.domain_name, 'is_nullable', (c.is_nullable)::boolean))
      AS columns\n           FROM information_schema.columns c\n          GROUP BY
      c.table_schema, c.table_name) columns ON ((((tables.table_schema)::text = (columns.table_schema)::text)
      AND ((tables.table_name)::text = (columns.table_name)::text))))\n     LEFT JOIN
      ( SELECT hdb_primary_key.table_schema,\n            hdb_primary_key.table_name,\n
      \           hdb_primary_key.constraint_name,\n            hdb_primary_key.columns\n
      \          FROM hdb_catalog.hdb_primary_key) pk ON ((((tables.table_schema)::text
      = (pk.table_schema)::text) AND ((tables.table_name)::text = (pk.table_name)::text))))\n
      \    LEFT JOIN ( SELECT c.table_schema,\n            c.table_name,\n            json_agg(c.constraint_name)
      AS constraints\n           FROM information_schema.table_constraints c\n          WHERE
      (((c.constraint_type)::text = 'UNIQUE'::text) OR ((c.constraint_type)::text
      = 'PRIMARY KEY'::text))\n          GROUP BY c.table_schema, c.table_name) constraints
      ON ((((tables.table_schema)::text = (constraints.table_schema)::text) AND ((tables.table_name)::text
      = (constraints.table_name)::text))))\n     LEFT JOIN ( SELECT v.table_schema,\n
      \           v.table_name,\n            json_build_object('is_updatable', ((v.is_updatable)::boolean
      OR (v.is_trigger_updatable)::boolean), 'is_deletable', ((v.is_updatable)::boolean
      OR (v.is_trigger_deletable)::boolean), 'is_insertable', ((v.is_insertable_into)::boolean
      OR (v.is_trigger_insertable_into)::boolean)) AS view_info\n           FROM information_schema.views
      v) views ON ((((tables.table_schema)::text = (views.table_schema)::text) AND
      ((tables.table_name)::text = (views.table_name)::text))))\n     JOIN hdb_catalog.hdb_table
      ON ((((tables.table_schema)::text = hdb_table.table_schema) AND ((tables.table_name)::text
      = hdb_table.table_name) AND (hdb_table.is_system_defined IS FALSE))));"
  type: run_sql
