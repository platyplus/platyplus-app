#!/usr/bin/env node

const app = require('../index'),
  PORT = process.env.PORT || 8080,
  http = require('http'),
  { createTerminus } = require('@godaddy/terminus')

var server = http.createServer(app)
server.listen(PORT, () => {
  console.log(`ðŸš€ Server ready and listening on port ${PORT}`)
})

// Health check
function onSignal () {
  console.info(
    'Got SIGINT (aka ctrl-c in docker). Graceful shutdown ',
    new Date().toISOString()
  )
}
function onShutdown () {
  console.info('cleanup finished, server is shutting down')
}
function healthCheck () {
  return Promise.resolve(200)
}
const terminusOptions = {
  // healthcheck options
  healthChecks: {
    '/healthcheck': healthCheck // a promise returning function indicating service health
  },
  timeout: 1000, // [optional = 1000] number of milliseconds before forcefull exiting
  onSignal, // [optional] cleanup function, returning a promise (used to be onSigterm)
  onShutdown // [optional] called right before exiting
}
createTerminus(server, terminusOptions)
