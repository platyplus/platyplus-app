version: '3.4'
services:
  platyplus:
    build: .
    command: ['yarn', 'dev:platyplus']
    environment:
      NODE_ENV: development
    healthcheck:
      disable: true
    restart: always
    volumes:
      - ./frontend/platyplus:/app/frontend/platyplus
      - /app/frontend/platyplus/node_modules
      - /app/frontend/platyplus/.quasar
      - /app/frontend/platyplus/dist
      - ./packages/errors:/app/packages/errors
      - /app/packages/errors/node_modules
      - /app/packages/errors/lib
      - ./packages/hasura-apollo-client/src:/app/packages/hasura-apollo-client/src # TODO include ALL subdirectories but exclude node_modules etc
      - ./packages/vuex-apollo-offline/src:/app/packages/vuex-apollo-offline/src # TODO include ALL subdirectories but exclude node_modules etc
    labels:
      - 'traefik.http.services.platyplus.loadbalancer.server.port=8080'
  authentication:
    build: .
    command: ['yarn', 'dev:authentication']
    environment:
      NODE_ENV: development
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authentication.rule=Host(`authentication.${DOMAIN:-localhost}`)'
      - 'traefik.http.routers.authentication.entrypoints=web'
      - 'traefik.http.services.authentication.loadbalancer.server.port=3000'
    ports:
      - '9229:9229'
    restart: always
    volumes: # TODO include ALL subdirectories but exclude node_modules etc
      - ./backend/authentication-service/src:/app/backend/authentication-service/src
      - ./packages/microservice/src:/app/packages/microservice/src
      - ./packages/errors/src:/app/packages/errors/src
      - ./packages/hasura-node-client/src:/app/packages/hasura-node-client/src
  # configuration: # TODO: revoir
  #   image: k8s.gcr.io/git-sync:v3.1.2
  #   environment: # See https://github.com/kubernetes/git-sync/blob/master/cmd/git-sync/main.go
  #     GIT_SYNC_REPO: https://github.com/platyplus/configuration
  #     GIT_SYNC_ROOT: /git
  #   user: root
  #   healthcheck:
  #     disable: true
  #   restart: always
  #   volumes:
  #     - configuration:/git
  graphql-engine:
    build:
      context: .
      dockerfile: ./backend/graphql-engine/Dockerfile
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      POSTGRES_HOST: 'postgres'
      ENABLE_CLOUDSQL_PROXY: 'false'
    command: ['graphql-engine', 'serve']
    healthcheck:
      disable: true
    restart: always
    volumes:
      - ./backend/graphql-engine/migrations:/hasura-migrations
  # functions:
  #   build:
  #     context: ./backend/functions-service
  #     args:
  #       NODE_ENV: development
  #   command: node /opt/start-dev
  #   environment:
  #     NODE_ENV: development
  #     HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
  #   healthcheck:
  #     disable: true
  #   labels:
  # - 'traefik.enable=true'
  # - 'traefik.http.routers.functions.rule=Host(`functions.${DOMAIN:-localhost}`)'
  # - 'traefik.http.routers.functions.entrypoints=web'
  # - 'traefik.http.services.functions.loadbalancer.server.port=3000'
  #   ports:
  #     - '9230:9229'
  #   restart: always
  #   volumes:
  #     - ./services/functions:/opt/app:delegated
  #     - ./services/functions/package.json:/opt/package.json
  #     - ./services/functions/package-lock.json:/opt/package-lock.json
  #     - notused_functions:/opt/app/node_modules
  postgres:
    ports:
      - '5432:5432'
    restart: always
  reverse-proxy:
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)'
      - 'traefik.http.routers.traefik.entrypoints=web'
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
    restart: always
volumes:
  configuration:
  notused_auth:
  notused_functions:
