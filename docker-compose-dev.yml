version: '3.4'
services:
  app:
    build: .
    command: ['yarn', 'dev:platyplus']
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
    volumes:
      - ./packages/platyplus/src:/app/packages/platyplus/src
      - ./packages/hasura-apollo-client/src:/app/packages/hasura-apollo-client/src
      - ./packages/vuex-apollo-offline/src:/app/packages/vuex-apollo-offline/src
  authentication:
    build: .
    command: ['yarn', 'dev:authentication']
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:auth-service.${DOMAIN}'
      - 'traefik.port=3000'
    ports:
      - '9229:9229'
    restart: always
    volumes:
      - ./packages/authentication-service/src:/app/packages/authentication-service/src
      - ./packages/microservice/src:/app/packages/microservice/src
      - ./packages/hasura-node-client/src:/app/packages/hasura-node-client/src
  # configuration: # TODO: revoir
  #   image: k8s.gcr.io/git-sync:v3.1.2
  #   environment: # See https://github.com/kubernetes/git-sync/blob/master/cmd/git-sync/main.go
  #     GIT_SYNC_REPO: https://github.com/platyplus/configuration
  #     GIT_SYNC_ROOT: /git
  #   user: root
  #   healthcheck:
  #     disable: true
  #   restart: always
  #   volumes:
  #     - configuration:/git
  graphql-engine:
    build:
      context: .
      dockerfile: ./packages/graphql-engine/Dockerfile
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      # HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
    command: ['graphql-engine', 'serve']
    healthcheck:
      disable: true
    restart: always
    volumes:
      - ./packages/graphql-engine/migrations:/opt/hasura-migrations
  # functions:
  #   build:
  #     context: ./packages/functions-service
  #     args:
  #       NODE_ENV: development
  #   command: node /opt/start-dev
  #   environment:
  #     HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
  #     NODE_ENV: development
  #   healthcheck:
  #     disable: true
  #   labels:
  #     - 'traefik.frontend.rule=Host:functions.${DOMAIN}'
  #     - 'traefik.port=3000'
  #   ports:
  #     - '9230:9229'
  #   restart: always
  #   volumes:
  #     - ./services/functions:/opt/app:delegated
  #     - ./services/functions/package.json:/opt/package.json
  #     - ./services/functions/package-lock.json:/opt/package-lock.json
  #     - notused_functions:/opt/app/node_modules
  postgres:
    ports:
      - '5432:5432'
    restart: always
  reverse-proxy:
    labels:
      - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
volumes:
  configuration:
  notused_app:
  notused_auth:
  notused_functions:
