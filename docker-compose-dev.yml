version: '3.4'
services:
  administration:
    build:
      context: ./services/administration
      args:
        NODE_ENV: development
    command: nodemon --inspect=0.0.0.0:9229 /opt/start
    environment:
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:admin-service.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:admin-service-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:admin-service-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      - ./services/administration:/opt/app:delegated
      - ./services/administration/package.json:/opt/package.json
      - ./services/administration/package-lock.json:/opt/package-lock.json
      - notused_admin:/opt/app/node_modules
  app:
    build:
      context: .
      dockerfile: server/Dockerfile
      target: prepare-deps-stage
    command: ['./node_modules/.bin/quasar', 'dev']
    environment:
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
    volumes:
      - ./server:/opt/app:delegated
      - ./server/package.json:/opt/package.json
      - ./server/package-lock.json:/opt/package-lock.json
      - notused_app:/opt/app/node_modules
  authentication:
    build:
      context: ./services/authentication
      args:
        NODE_ENV: development
    command: nodemon --inspect=0.0.0.0:9229 /opt/start
    environment:
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:auth-service.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:auth-service-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:auth-service-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      - ./services/authentication:/opt/app:delegated
      - ./services/authentication/package.json:/opt/package.json
      - ./services/authentication/package-lock.json:/opt/package-lock.json
      - notused_auth:/opt/app/node_modules
  graphql-engine:
    environment:
      AUTH_PUBLIC_KEY: '$PUBLIC_KEY'
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
    restart: always
  postgres:
    ports:
      - '55432:5432'
    restart: always
  reverse-proxy:
    # ports:
    # - '8080:8080' # The Web UI (enabled by --api) # TODO: map with traefik
    restart: always
    labels:
      - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
      - 'traefik.port=8080'
  synchronization-hook:
    build:
      context: ./services/synchronization-hook
      args:
        NODE_ENV: development
    command: nodemon --inspect=0.0.0.0:9229 /opt/start
    environment:
      HASURA_GRAPHQL_ACCESS_KEY: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:sync-hook.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:sync-hook-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:sync-hook-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      - ./services/synchronization-hook:/opt/app:delegated
      - ./services/synchronization-hook/package.json:/opt/package.json
      - ./services/synchronization-hook/package-lock.json:/opt/package-lock.json
      - notused_sync:/opt/app/node_modules
volumes:
  notused_admin:
  notused_app:
  notused_auth:
  notused_sync:
