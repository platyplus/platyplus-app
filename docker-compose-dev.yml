version: '3.4'
services:
  app:
    build:
      context: .
      dockerfile: server/Dockerfile
      target: prepare-deps-stage
    command: ['./node_modules/.bin/quasar', 'dev']
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /opt/hasura-migrations
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
    volumes:
      - ./src:/app/src:delegated
      - ./src-pwa:/app/src-pwa:delegated
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./quasar.conf.js:/app/quasar.conf.js
      - ./.quasar:/app/.quasar
      - ./babel.config.js:/app/babel.config.js
      - ./.eslintrc:/app/.eslintrc
      - ./.postcssrc:/app/.postcssrc
      - notused_app:/app/node_modules
  authentication:
    build:
      context: ./services/authentication
      args:
        NODE_ENV: development
    command: node /opt/start-dev
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:auth-service.${DOMAIN}'
      - 'traefik.port=3000'
    ports:
      - '9229:9229'
    restart: always
    volumes:
      - ./services/authentication:/opt/app:delegated
      - ./services/authentication/package.json:/opt/package.json
      - ./services/authentication/package-lock.json:/opt/package-lock.json
      - notused_auth:/opt/app/node_modules
  configuration: # TODO: revoir
    image: k8s.gcr.io/git-sync:v3.1.1
    environment: # See https://github.com/kubernetes/git-sync/blob/master/cmd/git-sync/main.go
      GIT_SYNC_REPO: https://github.com/platyplus/configuration
      GIT_SYNC_ROOT: /git
    user: root
    healthcheck:
      disable: true
    restart: always
    volumes:
      - configuration:/git
  graphql-engine:
    build:
      context: ./services/graphql-engine
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
    healthcheck:
      disable: true
    restart: always
    volumes:
      - ./services/graphql-engine/migrations:/opt/hasura-migrations
  functions:
    build:
      context: ./services/functions
      args:
        NODE_ENV: development
    command: node /opt/start-dev
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:functions.${DOMAIN}'
      - 'traefik.port=3000'
    ports:
      - '9230:9229'
    restart: always
    volumes:
      - ./services/functions:/opt/app:delegated
      - ./services/functions/package.json:/opt/package.json
      - ./services/functions/package-lock.json:/opt/package-lock.json
      - notused_functions:/opt/app/node_modules
  postgres:
    ports:
      - '5432:5432'
    restart: always
  reverse-proxy:
    labels:
      - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
volumes:
  configuration:
  notused_app:
  notused_auth:
  notused_functions:
