version: '3.4'
services:
  administration:
    build:
      context: ./services/administration
      args:
        NODE_ENV: development
    command: nodemon -e js --inspect=0.0.0.0:9229 /opt/start
    environment:
      NODE_ENV: development
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:admin-service.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:admin-service-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:admin-service-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      - configuration:/opt/git-sync
      - ./services/administration:/opt/app:delegated
      - ./services/administration/package.json:/opt/package.json
      - ./services/administration/package-lock.json:/opt/package-lock.json
      - notused_admin:/opt/app/node_modules
  app:
    build:
      context: .
      dockerfile: server/Dockerfile
      target: prepare-deps-stage
    command: ['./node_modules/.bin/quasar', 'dev']
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /opt/hasura-migrations
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:app.${DOMAIN}'
      - 'traefik.port=8080'
    restart: always
    volumes:
      - ./src:/app/src:delegated
      - ./src-pwa:/app/src-pwa:delegated
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./quasar.conf.js:/app/quasar.conf.js
      - ./.quasar:/app/.quasar
      - ./.babelrc:/app/.babelrc
      - ./.eslintrc:/app/.eslintrc
      - ./.postcssrc:/app/.postcssrc
  authentication:
    build:
      context: ./services/authentication
      args:
        NODE_ENV: development
    command: nodemon -e js --inspect=0.0.0.0:9229 /opt/start
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
      PRIVATE_KEY: '${PRIVATE_KEY}'
      PUBLIC_KEY: '${PUBLIC_KEY}'
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:auth-service.${DOMAIN}'
      - 'traefik.port=3000'
    restart: always
    volumes:
      # - configuration:/opt/git-sync
      - ./services/authentication:/opt/app:delegated
      - ./services/authentication/package.json:/opt/package.json
      - ./services/authentication/package-lock.json:/opt/package-lock.json
      - notused_auth:/opt/app/node_modules
  configuration:
    image: k8s.gcr.io/git-sync:v3.1.1
    environment: # See https://github.com/kubernetes/git-sync/blob/master/cmd/git-sync/main.go
      GIT_SYNC_REPO: https://github.com/platyplus/configuration
      GIT_SYNC_ROOT: /git
    user: root
    healthcheck:
      disable: true
    restart: always
    volumes:
      - configuration:/git
  # graphql-gateway:
  #   build:
  #     context: ./services/graphql-gateway
  #     args:
  #       NODE_ENV: development
  #   command: nodemon -e js --inspect=0.0.0.0:9229 index.js
  #   environment:
  #     NODE_ENV: development
  #     PUBLIC_KEY: '${PUBLIC_KEY}' # TODO: only required because of the embedded functions
  #     HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
  #   healthcheck:
  #     disable: true
  #   restart: always
  #   volumes:
  #     - ./services/graphql-gateway:/opt/app:delegated
  #     - ./services/graphql-gateway/package.json:/opt/package.json
  #     - ./services/graphql-gateway/package-lock.json:/opt/package-lock.json
  #     - notused_graphql_gateway:/opt/app/node_modules
  graphql-engine:
    build:
      context: ./services/graphql-engine
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
    healthcheck:
      disable: true
    restart: always
    volumes:
      - ./services/graphql-engine/migrations:/opt/hasura-migrations
    # labels:
    # - 'traefik.frontend.rule=Host:graphql.${DOMAIN}'
    # - 'traefik.port=3000'
  functions:
    build:
      context: ./services/functions
      args:
        NODE_ENV: development
    command: nodemon -e js --inspect=0.0.0.0:9229 index.js
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      # PUBLIC_KEY: '${PUBLIC_KEY}'
      NODE_ENV: development
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:functions.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:auth-service-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:auth-service-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      # - configuration:/opt/git-sync
      - ./services/functions:/opt/app:delegated
      - ./services/functions/package.json:/opt/package.json
      - ./services/functions/package-lock.json:/opt/package-lock.json
      - notused_functions:/opt/app/node_modules
  postgres:
    ports:
      - '5432:5432'
    restart: always
  reverse-proxy:
    ports:
      - '8080:8080' # The Web UI (enabled by --api) # TODO: map with traefik
    restart: always
  synchronization-hook:
    build:
      context: ./services/synchronization-hook
      args:
        NODE_ENV: development
    command: nodemon -e js --inspect=0.0.0.0:9229 /opt/start
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ACCESS_KEY}'
      NODE_ENV: development
    healthcheck:
      disable: true
    labels:
      - 'traefik.frontend.rule=Host:sync-hook.${DOMAIN}'
      - 'traefik.port=3000'
      # - 'traefik.frontend.rule=Host:sync-hook-inspect.${DOMAIN}'
      # - 'traefik.port=9229'
      # - 'traefik.frontend.rule=Host:sync-hook-inspect2.${DOMAIN}'
      # - 'traefik.port=9230'
    # ports:
    #   - '9229:9229' # TODO: map with traefik
    #   - '9230:9230' # TODO: map with traefik
    restart: always
    volumes:
      - ./services/synchronization-hook:/opt/app:delegated
      - ./services/synchronization-hook/package.json:/opt/package.json
      - ./services/synchronization-hook/package-lock.json:/opt/package-lock.json
      - notused_sync:/opt/app/node_modules
volumes:
  configuration:
  notused_admin:
  notused_app:
  notused_auth:
  notused_graphql_gateway:
  notused_functions:
  notused_sync:
